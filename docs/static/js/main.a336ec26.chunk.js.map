{"version":3,"sources":["reportWebVitals.js","helpers/getIpInfo.js","components/IpInfo.js","components/Header.js","components/SetView.js","components/Map.js","IpAdressTrackerApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getIpInfo","ipToFind","a","url","fetch","res","ok","Error","status","json","ip","location","isp","IpInfo","setcords","useState","IpInformation","setIpInformation","useEffect","catch","err","console","error","message","city","country","timezone","alert","lat","lng","undefined","className","icon","faSpinner","spin","id","Header","visibility","setipToFind","type","value","onChange","target","maxLength","placeholder","onClick","e","preventDefault","faChevronRight","SetView","position","useMap","setView","Map","cords","blackIcon","L","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","MapContainer","center","zoom","scrollWheelZoom","touchZoom","tap","TileLayer","attribution","Marker","Popup","IpAdressTrackerApp","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a336ec26.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\n\r\nexport const getIpInfo = async (ipToFind) => {\r\n\r\n   const url = `https://geo.ipify.org/api/v2/country,city?apiKey=at_YWtDvVxztnefjj5f5kG7pMvPZLGca&ipAddress=${ipToFind}`\r\n   const res = await fetch(url);\r\n   if(!res.ok)\r\n        throw new Error(\"WARN\", res.status);\r\n   const {ip, location, isp} = await res.json();\r\n  \r\n   return{\r\n       ip,\r\n       location,\r\n       isp\r\n   }\r\n\r\n}\r\n","import { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nimport \"../../src/styles/IpInfor/IpInfo.css\";\r\nimport { getIpInfo } from \"../helpers/getIpInfo\";\r\n\r\nexport const IpInfo = ({ ipToFind, setcords }) => {\r\n  \r\n  const [IpInformation, setIpInformation] = useState({\r\n    ip: \"\",\r\n    location: {},\r\n    isp: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    getIpInfo(ipToFind)\r\n      .then(({ ip, location, isp }) =>\r\n        setIpInformation({\r\n          ip,\r\n          location,\r\n          isp,\r\n        })\r\n      )\r\n      .catch((err) => {\r\n        console.error(\"ERROR: \", err.message);\r\n        setIpInformation({\r\n          ip: \"-\",\r\n          location: {\r\n            city: \"-\",\r\n            country: \"-\",\r\n            timezone: \"-\",\r\n          },\r\n          isp: \"-\",\r\n        });\r\n        alert(\"IP INVALID\");\r\n      });\r\n  }, [ipToFind]);\r\n\r\n  const { ip, location, isp } = IpInformation;\r\n  const { city, lat, lng, country, timezone } = location;\r\n    \r\n  useEffect(() => {\r\n    (lat !== undefined &&  lng !== undefined) && setcords({\r\n      lat,\r\n      lng\r\n    });\r\n  }, [lat, lng])\r\n  \r\n  // console.log(lat, lng);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ip-info-container\" >\r\n        <div className=\"info\">\r\n          <span>IP ADRESS</span>\r\n          {ip === \"\" ? <FontAwesomeIcon icon={faSpinner} spin /> : <b>{ip}</b>}\r\n        </div>\r\n\r\n        <div className=\"info\">\r\n          <span>LOCATION</span>\r\n          {(city && country) === undefined ? (\r\n            <FontAwesomeIcon icon={faSpinner} spin />\r\n          ) : (\r\n            <b>{`${city}, ${country}`}</b>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"info\">\r\n          <span>TIMEZONE</span>\r\n          {timezone === undefined ? (\r\n            <FontAwesomeIcon icon={faSpinner} spin />\r\n          ) : (\r\n            <b>{timezone}</b>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"info\" id = \"info-isp\">\r\n          <span>ISP</span>\r\n          {isp === \"\" ? (\r\n            <FontAwesomeIcon icon={faSpinner} spin />\r\n          ) : (\r\n            <b>{isp}</b>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { IpInfo } from \"./IpInfo\";\r\n\r\n\r\nimport \"../styles/Header/Header.css\";\r\nexport default function Header({setcords}) {\r\n\r\n  const [ipToFind, setipToFind] = useState({\r\n    visibility : false,\r\n    ip : \"\",\r\n  });\r\n\r\n  const { visibility, ip } = ipToFind;\r\n\r\n  \r\n  return (\r\n    <>\r\n      <header>\r\n        <h1>IP Address Tracker</h1>\r\n        <div className=\"search-box\">\r\n          <input type=\"text\"\r\n            value = {ip}\r\n            onChange = { ({target}) => { setipToFind({\r\n              visibility: false,\r\n              ip: target.value\r\n            }) }}\r\n            maxLength=\"15\"\r\n            placeholder = \"Search for any IP adress or domain\"\r\n            />\r\n          <button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              setipToFind({\r\n                ...ipToFind,\r\n                visibility: !visibility,\r\n              });\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faChevronRight} className=\"right-arrow\" />\r\n          </button>\r\n        </div>\r\n\r\n        {visibility && <IpInfo ipToFind={ip} setcords={setcords}/>}\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n","import { useMap } from \"react-leaflet\";\r\n\r\nexport const SetView = ({position}) => {\r\n  const map = useMap()\r\n  map.setView(position);\r\n  return null;\r\n};\r\n","import React from \"react\";\r\nimport \"../../src/styles/Map/Map.css\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport { SetView } from \"./SetView\";\r\nimport * as L from \"leaflet\";\r\n\r\nexport const Map = ({ cords }) => {\r\n  const blackIcon = new L.Icon({\r\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-black.png',\r\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34],\r\n    shadowSize: [41, 41]\r\n  });\r\n  return (\r\n    <>\r\n      <MapContainer\r\n        id=\"mapid\"\r\n        center={[0, 0]}\r\n        zoom={14}\r\n        scrollWheelZoom={false}\r\n        touchZoom = \"center\"\r\n        tap = \"true\"\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <SetView position={[cords.lat, cords.lng]} />\r\n        <Marker position={[cords.lat, cords.lng]} icon={blackIcon}>\r\n          <Popup>\r\n            Ip location.\r\n          </Popup>\r\n        </Marker>\r\n      </MapContainer>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport { Map } from \"./components/Map\";\r\n\r\nimport \"../src/styles/IpAdressTrackerApp/IpAdressTrackerApp.css\";\r\nexport default function IpAdressTrackerApp() {\r\n\r\n  const [cords, setcords] = useState({\r\n    lat: 35.63304462061077,\r\n    lng: 139.8803621105462\r\n  })\r\n\r\n  return (\r\n    <div className=\"Ip-adress-app\">\r\n      <Header setcords={setcords}/>\r\n\r\n      <Map cords = {cords}/>\r\n\r\n      <footer>Challenge by Frontend Mentor. Coded by <a href=\"https://github.com/paulxcz\" target=\"_blank\">Paulxcz</a>.</footer>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport IpAdressTrackerApp from './IpAdressTrackerApp';\n\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <IpAdressTrackerApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}